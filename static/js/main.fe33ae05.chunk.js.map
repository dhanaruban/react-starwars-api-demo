{"version":3,"sources":["xhr.js","sw-service.js","App.js","action-creators.js","store.js","index.js"],"names":["xhr","url","config","arguments","length","undefined","credentials","headers","Content-Type","Accept","body","JSON","stringify","fetch","then","res","status","Promise","reject","resolve","json","BASE","getPeople","concat","getPlanets","getStarships","mapDispatchToProps","dispatch","type","value","results","connect","state","loading","list","_ref","_useState","useState","_useState2","Object","slicedToArray","filterText","setFilterText","filteredList","filter","item","name","toLowerCase","indexOf","react_default","a","createElement","id","className","onClick","placeholder","onInput","e","target","v-if","map","key","createStore","action","assign","applyMiddleware","thunk","ReactDOM","render","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fe33ae05.chunk.js","sourcesContent":["export default function(url, config = {}) {\n    config.credentials = 'same-origin';\n    config.headers = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n  };\n  if(config.body) config.body = JSON.stringify(config.body);\n  \n  return fetch(url, config).then(res => {\n    if(res.status >= 300) return Promise.reject(res);\n    if(res.status === 204) return Promise.resolve();\n    return Promise.resolve(res.json());\n  });\n}\n  ","import xhr from './xhr';\nconst BASE = 'https://swapi.co/api/';\n\nconst getPeople = () => xhr(`${BASE}people`);\n\nconst getPlanets = () => xhr(`${BASE}planets`);\n\nconst getStarships = () => xhr(`${BASE}starships`);\n\nexport { getPeople, getPlanets, getStarships };\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { GET_PEOPLE, GET_PLANETS, GET_STARSHIPS } from './action-creators';\n\nconst _App = ({ loading, list, getPeople, getPlanets, getStarships }) => {\n  const [ filterText, setFilterText ] = useState('');\n  const filteredList = list.filter(item =>\n    ~item.name.toLowerCase().indexOf(filterText.toLowerCase())\n  );\n\n  return (\n    <div id=\"app\">\n      <h1>Star Wars API Demo</h1>\n\n      <div className=\"spacing\">\n        <button className=\"inline\" onClick={getPeople}>Get People</button>\n        <button className=\"inline\" onClick={getPlanets}>Get Planets</button>\n        <button className=\"inline\" onClick={getStarships}>Get Starships</button>\n      </div>\n\n      <div className=\"spacing\">\n        <input placeholder=\"Filter\" onInput={(e) => setFilterText(e.target.value)}/>\n      </div>\n\n      { loading &&\n        <div className=\"spacing\" v-if=\"loading\">Loading...</div>\n      }\n\n      { !loading &&\n        <ul className=\"spacing\">\n          { filteredList.map(item =>\n            <li key={item.name}>{ item.name }</li>\n          )}\n        </ul>\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    list: state.list\n  }\n};\n\nconst mapDispatchToProps = {\n  getPeople: GET_PEOPLE,\n  getPlanets: GET_PLANETS,\n  getStarships: GET_STARSHIPS\n};\n\nexport { _App };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_App);\n","import { getPeople, getPlanets, getStarships } from './sw-service';\n\nexport function GET_PEOPLE() {\n  return dispatch => {\n    dispatch({ type: 'SET_LOADING', value: true });\n    return getPeople().then(res => {\n      dispatch({ type: 'SET_LIST', value: res.results });\n    });\n  }\n}\n\nexport function GET_PLANETS() {\n  return dispatch => {\n    dispatch({ type: 'SET_LOADING', value: true });\n    return getPlanets().then(res => {\n      dispatch({ type: 'SET_LIST', value: res.results });\n    });\n  }\n}\n\t\t\t\nexport function GET_STARSHIPS() {\n  return dispatch => {\n    dispatch({ type: 'SET_LOADING', value: true });\n    return getStarships().then(res => {\n      dispatch({ type: 'SET_LIST', value: res.results });\n    });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst initialState = {\n  loading: false,\n  list: []\n};\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'SET_LOADING':\n      return Object.assign({}, state, {\n        loading: action.value\n      })\n      \n    case 'SET_LIST':\n      return Object.assign({}, state, {\n        loading: false,\n        list: action.value\n      })\n      \n    default:\n      return state;\n  }\n};\n\nexport default createStore(reducer, initialState, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}